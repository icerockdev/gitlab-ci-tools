.do_pre_script: &do_pre_script
  - eval $PRE_SCRIPT

## Following environments should be provided before job 'script' section called
# ASSEMBLE_TASK - gradle assemble task
# ARTIFACT_APK - path to output apk
.build_android: &build
  stage: build
  script:
    - *do_pre_script
    - export BUILD_NUMBER=$(echo $CI_COMMIT_TAG | sed 's/.*\///g')
    - fastlane run changelog_from_git_commits tag_match_pattern:build/* | grep -E '^([a-zA-Z]*-.*)' | sed 's/^\([a-zA-Z]*-[0-9]*\).*$/\1/' | sort | uniq |  tr '\n' ',' | sed 's/\(.*\),/\1/' > changelog.txt || true
    - sed -i '' "s/VERSION_CODE.*/VERSION_CODE=${BUILD_NUMBER}/" gradle.properties
    - ./gradlew ${ASSEMBLE_TASK}
    - echo ${ARTIFACT_APK} > apk.txt
  artifacts:
    paths:
      - ${ARTIFACT_APK}
      - apk.txt
      - changelog.txt
    expire_in: 2 days
  tags:
    - android
    - gradle

## Following environments should be provided before job 'script' section called
# FIREBASE_APP_ID - application id in firebase for distribution
# BUILD_CRASHLYTICS_TEST_GROUPS - group in crashlytics appdistribution
.deploy_android_firebase: &deploy_firebase
  stage: deploy
  script:
    - *do_pre_script
    - export APK_PATH=$(cat apk.txt)
    - firebase appdistribution:distribute $(pwd)/$APK_PATH --app ${FIREBASE_APP_ID} --release-notes-file $(pwd)/changelog.txt --groups "${BUILD_CRASHLYTICS_TEST_GROUPS}"
  except:
    - branches
  tags:
    - android
    - fastlane
